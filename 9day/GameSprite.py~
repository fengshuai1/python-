#coding=utf-8
import pygame
import random
SCREEN_RECT = pygame.Rect(0, 0, 480, 700)	#常量
CREATE_ENEMY_EVENT = pygame.USEREVENT	#常量
HERO_FIRE_EVENT = pygame.USEREVENT + 1
class GameSprite(pygame.sprite.Sprite):#父类 大写

	def __init__(self,image,speed=1):
		super(GameSprite,self).__init__()#调用父类方法
		self.image = pygame.image.load(image)
		self.rect = self.image.get_rect()
		self.speed = speed
	def update(self):
		self.rect.y +=self.speed

class Background(GameSprite):
	"""游戏背景精灵"""
	def __init__(self,is_alt=False):
     
		image_name = "./images/background.png"
		super(Background,self).__init__(image_name)
 
		# 判断是否交替图片，如果是，将图片设置到屏幕顶部
		if is_alt:
			self.rect.y = -self.rect.height


	def update(self):
		# 1. 调用父类的方法实现
		super(Background,self).update()
		if self.rect.y >= SCREEN_RECT.height:
			self.rect.y = -self.rect.height
class Enemy(GameSprite):
	"""敌机精灵"""

	def __init__(self):


		# 1. 调用父类方法，创建敌机精灵，并且指定敌机的图像
		super(Enemy,self).__init__("./images/enemy-1.gif")

		# 2. 设置敌机的随机初始速度
		self.speed = random.randint(1,3)

		# 3. 设置敌机的随机初始位置
		self.rect.bottom = 0	#平滑出现
		max_x =SCREEN_RECT.width - self.rect.width
		self.rect.x = random.randint(0,max_x)
	#del __del__(self):
		#print('敌机挂了%s'%self.rect)

	def update(self):

		# 1. 调用父类方法，让敌机在垂直方向运动
		super(Enemy,self).update()

		# 2. 判断是否飞出屏幕，如果是，需要将敌机从精灵组删除
		if self.rect.y >= SCREEN_RECT.height:
			#print("敌机飞出屏幕...")
			#将精灵从精灵组中删除
			self.kill()
		

class Hero(GameSprite):
	"""英雄精灵"""

	def __init__(self):

		super(Hero,self).__init__("./images/hero.gif", 0)
		self.bullet_group = pygame.sprite.Group()
		# 设置初始位置
		self.rect.center = SCREEN_RECT.center
		self.rect.bottom = SCREEN_RECT.bottom - 120
	def update(self):

		# 飞机水平移动
		self.rect.x += self.speed
		if self.rect.left < 0:
			self.rect.left = 0
		if self.rect.right >= SCREEN_RECT.width:
			self.rect.right = SCREEN_RECT.width	
	def fire(self):
		bullet = BulletSprite()
		bullet.rect.x = self.rect.centerx
		bullet.rect.bottom = self.rect.top

		bullet1 = BulletSprite()
    	bullet1.rect.x = self.rect.centerx - 35
    	bullet1.rect.bottom = self.rect.top + 30

		self.bullet_group.add(bullet)
		self.bullet_group.add(bullet1)
class Bullet(GameSprite):
	"""子弹精灵"""

	def __init__(self):
		imagename = "./images/bullet1.png"
		super(Hero,self).__init__(imagename,-10)
	def update(self):

		super().update()

		# 判断是否超出屏幕，如果是，从精灵组删除
		if self.rect.bottom < 0:
			self.kill()
